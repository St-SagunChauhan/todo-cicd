# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches:
      - develop

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install Dependencies
        run: cd FrontEnd_New_Design;  npm install --f;

      - name: Build React App
        run: cd FrontEnd_New_Design; npm run build --if-present;

      - uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: dist

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: app-build
      - run: ls dist

    # - name: Deploy to Main IIS Server
    #       if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #       run: |
    #         # Replace with your deployment script or commands
    #         # Example: xcopy /s /y build\* \\main-iis-server\wwwroot

    #     - name: Deploy to Staging IIS Server
    #       if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    #       run: |
    #         # Replace with your deployment script or commands
    #         # Example: xcopy /s /y build\* \\staging-iis-server\wwwroot

    #     - name: Deploy to Production IIS Server
    #       if: github.event_name == 'push' && github.ref == 'refs/heads/production'
    #       run: |
    #         # Replace with your deployment script or commands
    #         # Example: xcopy /s /y build\* \\production-iis-server\wwwroot

    # - name: Deploy to IIS
    #   uses: microsoft/iis-deploy@v0.3
    #   with:
    #     WebsiteName: "YourWebsiteName" # Replace with your IIS website name
    #     Package: "build-artifact" # Artifact name from the upload-artifact step
